name: Cypress Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          npm ci  # Install dependencies from 'package-lock.json'
          npx cypress install  # Install Cypress if not already installed

      # Step 4: Set up Allure commandline
      - name: Set up Allure commandline
        run: npm install -g allure-commandline

      # Step 5: Install Java and start API server
      - name: Set up Java and start API Server
        run: |
          # Install Java (required to run the API server)
          sudo apt-get install openjdk-17-jdk -y
          # Start the API server in the background
          nohup java -jar ./src/api/demo-0.0.1-SNAPSHOT.jar > server.log 2>&1 &
          # Wait for the API server to be fully up and accessible
          echo "Waiting for the API server to be ready..."
          until curl --silent --head http://localhost:7081/api/books; do
            echo "Server not ready yet. Retrying in 2 seconds..."
            sleep 2
          done
          echo "Server is up and running."

      # Step 6: Run Cypress tests (both UI and API tests)
      - name: Run Cypress tests
        run: |
          npx cypress run  # Run the Cypress tests

      # Step 7: List files for debugging
      - name: List files and directories
        run: |
          echo "Listing Allure results directory:"
          ls -l ./allure-results/ || echo "No allure-results directory found"
          echo "Listing Results directory:"
          ls -l ./results/ || echo "No results directory found"

      # Step 8: Upload test results
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-test-results
          path: |
            ./allure-results/  # Path to Allure results
            ./results/results.json  # Path to JSON results
  generate-report:
    needs: tests
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - uses: actions/checkout@v4

      # Step 2: Download test results
      - name: Download test results
        uses: actions/download-artifact@v3
        with:
          name: cypress-test-results
          path: results

      # Step 3: Generate Allure Report
      - name: Generate Allure Report
        run: |
          allure generate results/cypress-test-results -o results/allure-report --clean

      # Step 4: Upload Allure report
      - name: Upload Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: results/allure-report
          retention-days: 30
