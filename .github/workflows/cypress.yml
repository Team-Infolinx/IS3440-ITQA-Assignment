name: Cypress Tests with Allure Report

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          npm ci
          npx cypress install  # Ensure Cypress is installed

      # Step 4: Set up Allure commandline
      - name: Set up Allure commandline
        run: npm install allure-commandline

      # Step 5: Install additional dependencies for Allure and Cypress
      - name: Install additional dependencies
        run: |
          npm install mocha-allure-reporter allure-cypress --save-dev
          npm install @bahmutov/cypress-esbuild-preprocessor @badeball/cypress-cucumber-preprocessor cypress-file-upload --save-dev

      # Run Cypress tests and generate Allure results
      - name: Run Cypress tests
        run: |
          npx cypress run --reporter mocha-allure-reporter --reporter-options allureResults=allure-results
          echo "Cypress tests completed"

      # Always generate Allure report, even if tests failed
      - name: Generate Allure report
        run: |
          allure generate allure-results --clean
          allure open allure-report # This step can be omitted if you want to push it to GitHub Pages
        if: always()  # This ensures it runs even if previous steps fail

      # Step 8: Deploy Allure Report to GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages

  # Optional: If you'd like to host using a simple webserver instead of GitHub Pages
  generate-report:
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      # Step 1: Install HTTP Server
      - name: Install http-server
        run: |
          npm install -g http-server

      # Step 2: Serve the Allure report locally
      - name: Serve Allure Report
        run: |
          # Generate the report if not generated yet
          allure generate allure-results --clean
          http-server ./allure-report -p 8080 &

      # Step 3: Optional - Upload Allure report artifact (for easier access)
      - name: Upload Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: ./allure-report
          retention-days: 30
